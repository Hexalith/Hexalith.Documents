@page "/Documents/DocumentsInContainer/{DocumentContainerId}"

<HexEntityIndexPage AddPagePath="@($"/Documents/Upload/Document/{DocumentContainerId}")"
					Title="@(L[nameof(Labels.DocumentsInContainer), DocumentContainerId])"
					OnImport="OnImport"
					OnExport="OnExport"
					OnDatabaseSynchronize="OnDatabaseSynchronize"
					Search="@_search"
					SearchChanged="OnSearchChanged">

	<DocumentSummaryGrid 
		User="_user" 
		Search="@_search"
		@key="_search"
		DocumentContainerId="@DocumentContainerId" 
		HideContainerColumn="true"/>
</HexEntityIndexPage>

@code {
	[Parameter]
	public string DocumentContainerId { get; set; } = string.Empty;

	private string? _search;

	private IQueryable<DocumentSummaryViewModel> _items { get; set; } = Enumerable.Empty<DocumentSummaryViewModel>().AsQueryable();

	[CascadingParameter]
	public Task<AuthenticationState>? AuthenticationStateTask { get; set; }

	private ClaimsPrincipal? _user;

	protected override async Task OnInitializedAsync()
	{
		if (AuthenticationStateTask is not null)
		{
			var authState = await AuthenticationStateTask;
			_user = authState.User;
		}
		await base.OnInitializedAsync();
	}

	private void OnSearchChanged(string search)
	{
		_search = search;
		StateHasChanged();
	}

	private void OnImport()
	{
		ToastService.ShowInfo("Not Implemented");
	}

	private void OnExport()
	{
		ToastService.ShowInfo("Not Implemented");
	}

	private void OnDatabaseSynchronize()
	{
		ToastService.ShowInfo("Not Implemented");
	}

}